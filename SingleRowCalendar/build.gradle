apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)
apply plugin: 'maven-publish' // Apply at the top of build.gradle

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

publish {
    repoName = "android-libraries"
    userOrg = 'NadeemIqbal'
    groupId = 'com.nadeem'
    artifactId = 'single-row-calednar'
    publishVersion = '1.0.0'
    desc = 'Android library for horizontal single row calendar. With this library, you aren\'t attached to library built-in UI. You can create really beautiful and customizable UI and use selection features without hands getting dirty with RecyclerView and SelectionTracker.'
    website = 'https://github.com/miso01/SingleRowCalendar'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //own
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'androidx.recyclerview:recyclerview-selection:1.1.0-alpha06'

}


apply plugin: 'maven-publish' // Apply this plugin at the top of your library build.gradle

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

publishing {
    publications {
        scdevlibrary(MavenPublication) {
            groupId 'com.nadeem'
            artifactId 'SingleRowCalendar'
            version '1.0.0'
            artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
        }
    }

    repositories {
        maven {
            name = "SingleRowCalendar"
            url 'https://github.com/NadeemIqbal/SingleRowCalendar'
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
                // SC user token
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}